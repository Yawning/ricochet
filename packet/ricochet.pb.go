// Code generated by protoc-gen-go.
// source: ricochet.proto
// DO NOT EDIT!

/*
Package packet is a generated protocol buffer package.

It is generated from these files:
	ricochet.proto

It has these top-level messages:
	ControlPacket
	OpenChannel
	ChannelResult
	KeepAlive
	EnableFeatures
	FeaturesEnabled
	AuthHSPacket
	AuthHSProof
	AuthHSResult
	ContactRequest
	ContactRequestResponse
	ChatPacket
	ChatMessage
	ChatAcknowledge
*/
package packet

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ChannelResult_CommonError int32

const (
	ChannelResult_GenericError      ChannelResult_CommonError = 0
	ChannelResult_UnknownTypeError  ChannelResult_CommonError = 1
	ChannelResult_UnauthorizedError ChannelResult_CommonError = 2
	ChannelResult_BadUsageError     ChannelResult_CommonError = 3
	ChannelResult_FailedError       ChannelResult_CommonError = 4
)

var ChannelResult_CommonError_name = map[int32]string{
	0: "GenericError",
	1: "UnknownTypeError",
	2: "UnauthorizedError",
	3: "BadUsageError",
	4: "FailedError",
}
var ChannelResult_CommonError_value = map[string]int32{
	"GenericError":      0,
	"UnknownTypeError":  1,
	"UnauthorizedError": 2,
	"BadUsageError":     3,
	"FailedError":       4,
}

func (x ChannelResult_CommonError) Enum() *ChannelResult_CommonError {
	p := new(ChannelResult_CommonError)
	*p = x
	return p
}
func (x ChannelResult_CommonError) String() string {
	return proto.EnumName(ChannelResult_CommonError_name, int32(x))
}
func (x *ChannelResult_CommonError) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChannelResult_CommonError_value, data, "ChannelResult_CommonError")
	if err != nil {
		return err
	}
	*x = ChannelResult_CommonError(value)
	return nil
}

type ContactRequestResponse_Status int32

const (
	ContactRequestResponse_Undefined ContactRequestResponse_Status = 0
	ContactRequestResponse_Pending   ContactRequestResponse_Status = 1
	ContactRequestResponse_Accepted  ContactRequestResponse_Status = 2
	ContactRequestResponse_Rejected  ContactRequestResponse_Status = 3
	ContactRequestResponse_Error     ContactRequestResponse_Status = 4
)

var ContactRequestResponse_Status_name = map[int32]string{
	0: "Undefined",
	1: "Pending",
	2: "Accepted",
	3: "Rejected",
	4: "Error",
}
var ContactRequestResponse_Status_value = map[string]int32{
	"Undefined": 0,
	"Pending":   1,
	"Accepted":  2,
	"Rejected":  3,
	"Error":     4,
}

func (x ContactRequestResponse_Status) Enum() *ContactRequestResponse_Status {
	p := new(ContactRequestResponse_Status)
	*p = x
	return p
}
func (x ContactRequestResponse_Status) String() string {
	return proto.EnumName(ContactRequestResponse_Status_name, int32(x))
}
func (x *ContactRequestResponse_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContactRequestResponse_Status_value, data, "ContactRequestResponse_Status")
	if err != nil {
		return err
	}
	*x = ContactRequestResponse_Status(value)
	return nil
}

type ControlPacket struct {
	// Must contain exactly one field
	OpenChannel      *OpenChannel     `protobuf:"bytes,1,opt,name=open_channel" json:"open_channel,omitempty"`
	ChannelResult    *ChannelResult   `protobuf:"bytes,2,opt,name=channel_result" json:"channel_result,omitempty"`
	KeepAlive        *KeepAlive       `protobuf:"bytes,3,opt,name=keep_alive" json:"keep_alive,omitempty"`
	EnableFeatures   *EnableFeatures  `protobuf:"bytes,4,opt,name=enable_features" json:"enable_features,omitempty"`
	FeaturesEnabled  *FeaturesEnabled `protobuf:"bytes,5,opt,name=features_enabled" json:"features_enabled,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ControlPacket) Reset()         { *m = ControlPacket{} }
func (m *ControlPacket) String() string { return proto.CompactTextString(m) }
func (*ControlPacket) ProtoMessage()    {}

func (m *ControlPacket) GetOpenChannel() *OpenChannel {
	if m != nil {
		return m.OpenChannel
	}
	return nil
}

func (m *ControlPacket) GetChannelResult() *ChannelResult {
	if m != nil {
		return m.ChannelResult
	}
	return nil
}

func (m *ControlPacket) GetKeepAlive() *KeepAlive {
	if m != nil {
		return m.KeepAlive
	}
	return nil
}

func (m *ControlPacket) GetEnableFeatures() *EnableFeatures {
	if m != nil {
		return m.EnableFeatures
	}
	return nil
}

func (m *ControlPacket) GetFeaturesEnabled() *FeaturesEnabled {
	if m != nil {
		return m.FeaturesEnabled
	}
	return nil
}

type OpenChannel struct {
	ChannelIdentifier *int32                    `protobuf:"varint,1,req,name=channel_identifier" json:"channel_identifier,omitempty"`
	ChannelType       *string                   `protobuf:"bytes,2,req,name=channel_type" json:"channel_type,omitempty"`
	XXX_extensions    map[int32]proto.Extension `json:"-"`
	XXX_unrecognized  []byte                    `json:"-"`
}

func (m *OpenChannel) Reset()         { *m = OpenChannel{} }
func (m *OpenChannel) String() string { return proto.CompactTextString(m) }
func (*OpenChannel) ProtoMessage()    {}

var extRange_OpenChannel = []proto.ExtensionRange{
	{100, 536870911},
}

func (*OpenChannel) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_OpenChannel
}
func (m *OpenChannel) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *OpenChannel) GetChannelIdentifier() int32 {
	if m != nil && m.ChannelIdentifier != nil {
		return *m.ChannelIdentifier
	}
	return 0
}

func (m *OpenChannel) GetChannelType() string {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return ""
}

type ChannelResult struct {
	ChannelIdentifier *int32                     `protobuf:"varint,1,req,name=channel_identifier" json:"channel_identifier,omitempty"`
	Opened            *bool                      `protobuf:"varint,2,req,name=opened" json:"opened,omitempty"`
	CommonError       *ChannelResult_CommonError `protobuf:"varint,3,opt,name=common_error,enum=packet.ChannelResult_CommonError" json:"common_error,omitempty"`
	XXX_extensions    map[int32]proto.Extension  `json:"-"`
	XXX_unrecognized  []byte                     `json:"-"`
}

func (m *ChannelResult) Reset()         { *m = ChannelResult{} }
func (m *ChannelResult) String() string { return proto.CompactTextString(m) }
func (*ChannelResult) ProtoMessage()    {}

var extRange_ChannelResult = []proto.ExtensionRange{
	{100, 536870911},
}

func (*ChannelResult) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChannelResult
}
func (m *ChannelResult) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *ChannelResult) GetChannelIdentifier() int32 {
	if m != nil && m.ChannelIdentifier != nil {
		return *m.ChannelIdentifier
	}
	return 0
}

func (m *ChannelResult) GetOpened() bool {
	if m != nil && m.Opened != nil {
		return *m.Opened
	}
	return false
}

func (m *ChannelResult) GetCommonError() ChannelResult_CommonError {
	if m != nil && m.CommonError != nil {
		return *m.CommonError
	}
	return ChannelResult_GenericError
}

type KeepAlive struct {
	ResponseRequested *bool  `protobuf:"varint,1,req,name=response_requested" json:"response_requested,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *KeepAlive) Reset()         { *m = KeepAlive{} }
func (m *KeepAlive) String() string { return proto.CompactTextString(m) }
func (*KeepAlive) ProtoMessage()    {}

func (m *KeepAlive) GetResponseRequested() bool {
	if m != nil && m.ResponseRequested != nil {
		return *m.ResponseRequested
	}
	return false
}

type EnableFeatures struct {
	Feature          []string                  `protobuf:"bytes,1,rep,name=feature" json:"feature,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *EnableFeatures) Reset()         { *m = EnableFeatures{} }
func (m *EnableFeatures) String() string { return proto.CompactTextString(m) }
func (*EnableFeatures) ProtoMessage()    {}

var extRange_EnableFeatures = []proto.ExtensionRange{
	{100, 536870911},
}

func (*EnableFeatures) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_EnableFeatures
}
func (m *EnableFeatures) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *EnableFeatures) GetFeature() []string {
	if m != nil {
		return m.Feature
	}
	return nil
}

type FeaturesEnabled struct {
	Feature          []string                  `protobuf:"bytes,1,rep,name=feature" json:"feature,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *FeaturesEnabled) Reset()         { *m = FeaturesEnabled{} }
func (m *FeaturesEnabled) String() string { return proto.CompactTextString(m) }
func (*FeaturesEnabled) ProtoMessage()    {}

var extRange_FeaturesEnabled = []proto.ExtensionRange{
	{100, 536870911},
}

func (*FeaturesEnabled) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_FeaturesEnabled
}
func (m *FeaturesEnabled) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *FeaturesEnabled) GetFeature() []string {
	if m != nil {
		return m.Feature
	}
	return nil
}

type AuthHSPacket struct {
	Proof            *AuthHSProof  `protobuf:"bytes,1,opt,name=proof" json:"proof,omitempty"`
	Result           *AuthHSResult `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *AuthHSPacket) Reset()         { *m = AuthHSPacket{} }
func (m *AuthHSPacket) String() string { return proto.CompactTextString(m) }
func (*AuthHSPacket) ProtoMessage()    {}

func (m *AuthHSPacket) GetProof() *AuthHSProof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (m *AuthHSPacket) GetResult() *AuthHSResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type AuthHSProof struct {
	PublicKey        []byte `protobuf:"bytes,1,opt,name=public_key" json:"public_key,omitempty"`
	Signature        []byte `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthHSProof) Reset()         { *m = AuthHSProof{} }
func (m *AuthHSProof) String() string { return proto.CompactTextString(m) }
func (*AuthHSProof) ProtoMessage()    {}

func (m *AuthHSProof) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *AuthHSProof) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type AuthHSResult struct {
	Accepted         *bool  `protobuf:"varint,1,req,name=accepted" json:"accepted,omitempty"`
	IsKnownContact   *bool  `protobuf:"varint,2,opt,name=is_known_contact" json:"is_known_contact,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthHSResult) Reset()         { *m = AuthHSResult{} }
func (m *AuthHSResult) String() string { return proto.CompactTextString(m) }
func (*AuthHSResult) ProtoMessage()    {}

func (m *AuthHSResult) GetAccepted() bool {
	if m != nil && m.Accepted != nil {
		return *m.Accepted
	}
	return false
}

func (m *AuthHSResult) GetIsKnownContact() bool {
	if m != nil && m.IsKnownContact != nil {
		return *m.IsKnownContact
	}
	return false
}

// Sent only as an attachment to OpenChannel
type ContactRequest struct {
	Nickname         *string `protobuf:"bytes,1,opt,name=nickname" json:"nickname,omitempty"`
	MessageText      *string `protobuf:"bytes,2,opt,name=message_text" json:"message_text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ContactRequest) Reset()         { *m = ContactRequest{} }
func (m *ContactRequest) String() string { return proto.CompactTextString(m) }
func (*ContactRequest) ProtoMessage()    {}

func (m *ContactRequest) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *ContactRequest) GetMessageText() string {
	if m != nil && m.MessageText != nil {
		return *m.MessageText
	}
	return ""
}

// Response is the only valid message to send on the channel
type ContactRequestResponse struct {
	Status           *ContactRequestResponse_Status `protobuf:"varint,1,req,name=status,enum=packet.ContactRequestResponse_Status" json:"status,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *ContactRequestResponse) Reset()         { *m = ContactRequestResponse{} }
func (m *ContactRequestResponse) String() string { return proto.CompactTextString(m) }
func (*ContactRequestResponse) ProtoMessage()    {}

func (m *ContactRequestResponse) GetStatus() ContactRequestResponse_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ContactRequestResponse_Undefined
}

type ChatPacket struct {
	ChatMessage      *ChatMessage     `protobuf:"bytes,1,opt,name=chat_message" json:"chat_message,omitempty"`
	ChatAcknowledge  *ChatAcknowledge `protobuf:"bytes,2,opt,name=chat_acknowledge" json:"chat_acknowledge,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ChatPacket) Reset()         { *m = ChatPacket{} }
func (m *ChatPacket) String() string { return proto.CompactTextString(m) }
func (*ChatPacket) ProtoMessage()    {}

func (m *ChatPacket) GetChatMessage() *ChatMessage {
	if m != nil {
		return m.ChatMessage
	}
	return nil
}

func (m *ChatPacket) GetChatAcknowledge() *ChatAcknowledge {
	if m != nil {
		return m.ChatAcknowledge
	}
	return nil
}

type ChatMessage struct {
	MessageText      *string `protobuf:"bytes,1,req,name=message_text" json:"message_text,omitempty"`
	MessageId        *uint32 `protobuf:"varint,2,opt,name=message_id" json:"message_id,omitempty"`
	TimeDelta        *int64  `protobuf:"varint,3,opt,name=time_delta" json:"time_delta,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}

func (m *ChatMessage) GetMessageText() string {
	if m != nil && m.MessageText != nil {
		return *m.MessageText
	}
	return ""
}

func (m *ChatMessage) GetMessageId() uint32 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *ChatMessage) GetTimeDelta() int64 {
	if m != nil && m.TimeDelta != nil {
		return *m.TimeDelta
	}
	return 0
}

type ChatAcknowledge struct {
	MessageId        *uint32 `protobuf:"varint,1,opt,name=message_id" json:"message_id,omitempty"`
	Accepted         *bool   `protobuf:"varint,2,opt,name=accepted,def=1" json:"accepted,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatAcknowledge) Reset()         { *m = ChatAcknowledge{} }
func (m *ChatAcknowledge) String() string { return proto.CompactTextString(m) }
func (*ChatAcknowledge) ProtoMessage()    {}

const Default_ChatAcknowledge_Accepted bool = true

func (m *ChatAcknowledge) GetMessageId() uint32 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *ChatAcknowledge) GetAccepted() bool {
	if m != nil && m.Accepted != nil {
		return *m.Accepted
	}
	return Default_ChatAcknowledge_Accepted
}

var E_ClientCookie = &proto.ExtensionDesc{
	ExtendedType:  (*OpenChannel)(nil),
	ExtensionType: ([]byte)(nil),
	Field:         7200,
	Name:          "packet.client_cookie",
	Tag:           "bytes,7200,opt,name=client_cookie",
}

var E_ServerCookie = &proto.ExtensionDesc{
	ExtendedType:  (*ChannelResult)(nil),
	ExtensionType: ([]byte)(nil),
	Field:         7200,
	Name:          "packet.server_cookie",
	Tag:           "bytes,7200,opt,name=server_cookie",
}

var E_ContactRequest = &proto.ExtensionDesc{
	ExtendedType:  (*OpenChannel)(nil),
	ExtensionType: (*ContactRequest)(nil),
	Field:         200,
	Name:          "packet.contact_request",
	Tag:           "bytes,200,opt,name=contact_request",
}

var E_Response = &proto.ExtensionDesc{
	ExtendedType:  (*ChannelResult)(nil),
	ExtensionType: (*ContactRequestResponse)(nil),
	Field:         201,
	Name:          "packet.response",
	Tag:           "bytes,201,opt,name=response",
}

func init() {
	proto.RegisterEnum("packet.ChannelResult_CommonError", ChannelResult_CommonError_name, ChannelResult_CommonError_value)
	proto.RegisterEnum("packet.ContactRequestResponse_Status", ContactRequestResponse_Status_name, ContactRequestResponse_Status_value)
	proto.RegisterExtension(E_ClientCookie)
	proto.RegisterExtension(E_ServerCookie)
	proto.RegisterExtension(E_ContactRequest)
	proto.RegisterExtension(E_Response)
}
